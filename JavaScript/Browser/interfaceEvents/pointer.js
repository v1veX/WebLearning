// события указателя работают для всех типов указателей
// замена mouse<event> на pointer<event> вполне разумна и будет отлично работать, а также улучшится поддержка сенсорных устройств
/* 
Событие указателя	Аналогичное событие мыши
pointerdown	        mousedown
pointerup	        mouseup
pointermove	        mousemove
pointerover	        mouseover
pointerout	        mouseout
pointerenter	    mouseenter
pointerleave	    mouseleave
pointercancel	    -
gotpointercapture	-
lostpointercapture	- 
*/

// Дополнительные свойства событий указателя
/* 
pointerId – уникальный идентификатор указателя, вызвавшего событие.

Идентификатор генерируется браузером. Это свойство позволяет обрабатывать несколько указателей, например сенсорный экран со стилусом и мульти-тач (увидим примеры ниже).

pointerType – тип указывающего устройства. Должен быть строкой с одним из значений: «mouse», «pen» или «touch».

Мы можем использовать это свойство, чтобы определять разное поведение для разных типов указателей.

isPrimary – равно true для основного указателя (первый палец в мульти-тач). 
*/

// Событие pointercancel происходит, когда текущее действие с указателем по какой-то причине прерывается, и события указателя больше не генерируются.
/* 
К таким причинам можно отнести:

Указывающее устройство было физически выключено.
Изменилась ориентация устройства (перевернули планшет).
Браузер решил сам обработать действие, считая его жестом мыши, масштабированием и т.п.
*/

// Захват указателя
// elem.setPointerCapture(pointerId) – привязывает события с данным pointerId к elem. После такого вызова все события указателя с таким pointerId будут иметь elem в качестве целевого элемента (как будто произошли над elem), вне зависимости от того, где в документе они произошли

// при захвате указателя генерируются следующие события
/*
1. gotpointercapture срабатывает, когда элемент использует setPointerCapture для включения захвата.
2. lostpointercapture срабатывает при освобождении от захвата: явно с помощью releasePointerCapture или автоматически, когда происходит событие pointerup/pointercancel
*/